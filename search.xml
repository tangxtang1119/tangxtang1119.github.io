<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Typora的使用</title>
    <url>/2025/01/24/Typora%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<h2 id="Typora是什么？"><a href="#Typora是什么？" class="headerlink" title="Typora是什么？"></a>Typora是什么？</h2><p>​		Typora是一款由Abner Lee开发的轻量级Markdown编辑器，适用于OS X、Windows和Linux三种操作系统，是一款免费软件。与其他Markdown编辑器不同的是，Typora没有采用源代码和预览双栏显示的方式，而是采用所见即所得的编辑方式，实现了即时预览的功能，但也可切换至源代码编辑模式</p>
<span id="more"></span>


<h2 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h2><h4 id="1-标题"><a href="#1-标题" class="headerlink" title="1.标题"></a><strong>1.标题</strong></h4><p>快捷键，Ctrl+数字（1、2、3、4、5、6），一共六个数字由大到小六个标题等级。</p>
<h4 id="2-文本"><a href="#2-文本" class="headerlink" title="2.文本"></a><strong>2.文本</strong></h4><h6 id="2-1-分割线"><a href="#2-1-分割线" class="headerlink" title="2.1 分割线"></a>2.1 分割线</h6><p>三个+++、***、或—，如下：</p>
<hr>
<h6 id="2-2-下划线"><a href="#2-2-下划线" class="headerlink" title="2.2 下划线"></a>2.2 下划线</h6><p>Ctrl+U或&lt; u &gt;标签包住文本，如：<u>kedai</u></p>
<h6 id="2-3-删除线"><a href="#2-3-删除线" class="headerlink" title="2.3 删除线"></a>2.3 删除线</h6><p>Alt+Shift+5或使用一对 “ ~ “符号包括文本，如：<del>kedai</del></p>
<h6 id="2-4-斜体"><a href="#2-4-斜体" class="headerlink" title="2.4 斜体"></a>2.4 斜体</h6><p>Ctrl+l、或使用一对 “ _ “符号包括文本，如：<em>kedai</em></p>
<h6 id="2-5-粗体"><a href="#2-5-粗体" class="headerlink" title="2.5 粗体"></a>2.5 粗体</h6><p>Ctrl+B、使用一对 “ ** “符号包括文本、或使用一对 “ __ “符号包括文本，如：<strong>kedai</strong></p>
<h6 id="2-6-粗体倾斜"><a href="#2-6-粗体倾斜" class="headerlink" title="2.6 粗体倾斜"></a>2.6 粗体倾斜</h6><p>使用一对三个“ * ” 符号包括文本，如：<em><strong>kedai</strong></em></p>
<h6 id="2-7-设置字体颜色及大小"><a href="#2-7-设置字体颜色及大小" class="headerlink" title="2.7 设置字体颜色及大小"></a>2.7 设置字体颜色及大小</h6><p>&lt; font size&#x3D;2 color&#x3D;”yellow” &gt;设置字体大小为2，颜色为黄色&lt; &#x2F;font  &gt; ，如：<font size=2 color="yellow">kedai</font> </p>
<h6 id="2-8-设置字体高亮"><a href="#2-8-设置字体高亮" class="headerlink" title="2.8 设置字体高亮"></a>2.8 设置字体高亮</h6><p>使用一对“ &#x3D;&#x3D; ”符号包括文本，如：&#x3D;&#x3D;kedai&#x3D;&#x3D;</p>
<h6 id="2-9-文本对齐"><a href="#2-9-文本对齐" class="headerlink" title="2.9 文本对齐"></a>2.9 文本对齐</h6><p>&lt; p align&#x3D;”lift” &gt;左对齐&lt; &#x2F;p &gt;</p>
<p align="lift">左对齐</p>

<p>&lt; p align&#x3D;”center” &gt;居中对齐&lt; &#x2F;p &gt;</p>
<p align="center" >居中对齐</p >

<p>&lt; p align&#x3D;”right” &gt;左对齐&lt; &#x2F;p &gt;</p>
<p align="right" >右对齐</p >

<h4 id="3-插入"><a href="#3-插入" class="headerlink" title="3.插入"></a><strong>3.插入</strong></h4><h6 id="3-1链接文字"><a href="#3-1链接文字" class="headerlink" title="3.1链接文字"></a>3.1链接文字</h6><p>① 当链接地址为外部地址时，格式：[ 链接文字 ] (src“描述链接”) ，其中的描述可以写也可以不写。快捷键为Ctrl+K，用Ctrl+鼠标左键点击进入链接。如：<a href="https://taobao.com/">这是一个淘宝链接</a></p>
<p>② 当链接地址为本地地址时，其中本地地址可以是相对地址和绝对地址</p>
<ul>
<li><p>绝对地址 格式：[ 绝对地址 ] (src “本地地址链接”)，用Ctrl+鼠标左键点击进入链接，上传远程后是没有效果的。</p>
</li>
<li><p>相对地址 格式：[ 相对地址\ ] ( src “&#x2F;标题.png”)，其中.&#x2F;代表.md文件所在的地址…&#x2F;表示的是.md文件的上级地址。</p>
</li>
</ul>
<h6 id="3-2图片"><a href="#3-2图片" class="headerlink" title="3.2图片"></a>3.2图片</h6><p>一共有四种方式</p>
<p>①外部链接 </p>
<p>格式：！[ alt ] (src)，快捷键：Ctrl+Shift+l</p>
<p>和链接文件、文档差不多，指示在前面加了一个！。alt：是图片的注释（可以为空），src：既可以是本地图片的绝对&#x2F;相对路径。</p>
<p>②html标签 </p>
<p>格式：&lt; img src&#x3D;”.&#x2F;图片演示.png” alt&#x3D;”替代文本” title&#x3D;”图片标题” width&#x3D;”200” height&#x3D;”200” &gt;</p>
<p>width和height设置大小，align设置位置，style中margin设置外边距、border设置边框</p>
<p>③本地文件 </p>
<p>格式：！[ alt ] (src)</p>
<p>直接拖拽、复制就行，也可以进行图片链接。拖拽和复制本质上和第一种图片链接是一样的。但是Typora默认的是绝对地址，图片没有复制到.md文件同一目录下。如果移动了.md文件或者图片位置，都会丢失图片。</p>
<p>④ TYpora支持从剪贴板中粘贴图片，但是因为 Markdown 文件是纯文本文件，所以用户无法在 Markdown 文件中直接插入图片文件，而是通过在 Markdown 文件中引用文件路径或者 URL 的方式插入图片，所以默认情况下，Typora 会先将文件保存到一个固定的目录，在 Windows 上，是保存到~\AppData\Roaming\Typora\typora-user-images\目录下。</p>
<p>所以需要修改设置（文件 &gt; 偏好设置 &gt; 图像 &gt; 对本地位置的图片应用上述规则 &gt; 下拉勾选其中一个）</p>
<p>第一个选项 [无特殊操作]，是默认选项。</p>
<p>第二个选项 [复制图片到当前文件夹（.&#x2F;）]，意思就是在插入图片时，将图片复制到正在编辑的Markdown文件所在的目录下。</p>
<p>第三个选项 [复制图片到.&#x2F;filename.assets文件夹]，意思是在插入图片时，会在当前目录下创建一个名为“{filename.asset}”的文件夹，然后把图片保存在这个文件夹下，其中${filename}&#96;指的是当前你正在编辑的Markdown文件的文件名。</p>
<p>第四个选项 [上传图片]，就是在你插入图片时，使用图片上传服务将图片上传到服务器。</p>
<p>第五个选项 [复制到指定路径]，选择该选项后，会出现一个输入框输入保存图片的路径，这里也就是使用${filrname}来指代当前编辑的Markdowan文件的文件名，也可以点击右边的文件夹按钮在弹出的对话框中选择一个路径。</p>
<p>因为如果在 Markdown 文件中使用了图片，那说明这张图片和写的东西是有关联的，那最好把图片和 Markdown 文件放在一起，这样也便于以后查找。还要注意的是，如果选择了[复制图片到当前文件夹（.&#x2F;）]，那么要把下面的[优先使用相对路径]选项勾选上，这样，Typora 在引用图片时就会使用相对路径，以后即使移动 Markdown 文件到别的目录下，只要图片随着 Markdown 文件一起移动， Typora 就永远都能找到这张图片。再配合[上传图片]，就能使 Markdown 文件的维护成本最小化。</p>
<h6 id="3-3表格"><a href="#3-3表格" class="headerlink" title="3.3表格"></a>3.3表格</h6><p>插入表格可以使用代码的方式插入，但是感觉太麻烦了。采用快捷键Ctrl+T</p>
<h4 id="4-上传图片-详细说明"><a href="#4-上传图片-详细说明" class="headerlink" title="4.[上传图片] 详细说明"></a><strong>4.[上传图片] 详细说明</strong></h4><p>如果src是 URL 的话，你在分享的时候只要分享一个 Markdown 文件就可以了，只要能联网，Markdown 的渲染引擎就能根据 URL 找到你引用的图片。</p>
<p>要想把本地的图片路径转换成 URL，就得把图片上传到网络上某个位置，然后拿到这个图片的 URL。使用[Typora + 第三方图片上传服务]就可以自动完成这一操作。</p>
<p><strong>⚠警告：</strong></p>
<p><u><em>Typora是通过调用第三方的软件实现图片上传的，它本身并不会上传图片，提供存储图片服务的也是第三方的云存储服务，它们并不属于Typora。所以在使用上传图片功能的时候，要注意这些第三方服务的许可证书、用户协议、服务稳定性以及可靠性。</em></u></p>
<p><u><em>在偏好设置中开启上传图片的功能后，Typora 会将要上传的图片发送给第三方图片上传软件，然后他们会把你的图片上传到第三方（甚至是第四方）图床，Typora 不会控制这个过程，也无法保证这个过程的顺利，所以一定要选择一个可靠的服务来保证数据的安全。</em></u></p>
<p><u><em>除了隐私和可靠性问题，你还需注意，有些服务在保存图片时可能会设置过期时间；有些服务没有提供 [删除] 的功能，即使你不小心上传了敏感图片；有些服务遵守的不是你所在国家的法律，可能会封禁一些特定国家的特定类型的图片或者用户等等。</em></u></p>
<p><u><em>总而言之，在选择某个图片上传应用及服务之前，一定要仔细阅读他们的用户手册。</em></u></p>
<p>配置：</p>
<p>在偏好设置面板中可以开启并配置图片上传服务，Typora支持以下图片上传服务：</p>
<ul>
<li>PicGo.app (macOS &#x2F; Windows &#x2F; Linux, 只有简体中文版)</li>
<li>PicGo (命令行应用) (Windows &#x2F; Linux)</li>
<li>自定义 (macOS &#x2F; Windows &#x2F; Linux)</li>
</ul>
<p>在选择了其中一个上传服务后，你需要下载并安装相应的应用，做一些简单的配置，比如你想使用那个云存储服务来保存上传的图片，然后点击 [验证图片上传选项]，验证Typora使用当前服务和配置是否能上传本地图片。</p>
<p>点击 [验证图片上传选项] 按钮后，Typora会尝试使用当前服务和配置上传图片，如果出现 [验证成功] 的对话框，说明图片上传服务可以用了。如果显示的时 [验证失败] 的对话框，有可能时你电脑上还没有安装相应的服务或者网络问题，可以根据对话框中的提示进行检查。</p>
<p><strong><u>Typora + PicGo + Gitee&#x2F;GitHub 搭建个人图床，实现图片上传。</u></strong></p>
<p>Typora 的作用</p>
<p>具有对图片路径进行管理和转换的功能。当用户在 Typora 中插入图片时，它可以将图片的本地路径转换为符合 Markdown 语法的链接形式。而且 Typora 可以与 PicGo 进行集成，将图片上传的操作集成到其操作流程中，使得用户在撰写文档插入图片时，能够直接调用 PicGo 进行图片上传，而无需额外切换到其他工具进行上传操作。</p>
<p>PicGo 的作用</p>
<p>PicGo 是一个专门用于图片上传的工具，它支持多种图床平台，其核心原理是通过调用不同图床平台的 API，将本地图片数据以二进制流等形式发送到对应的图床服务器上。_在与 Typora 和 Gitee&#x2F;GitHub 配合时，PicGo 充当了桥梁的角色。_当在 Typora 中触发图片上传操作时，PicGo 会获取到图片的本地路径和相关信息，然后根据用户在 PicGo 中配置的 Gitee 或 GitHub 图床参数，将图片数据按照相应平台的要求进行格式化和封装，再通过 HTTP 请求等方式将图片上传到 Gitee 或 GitHub 的仓库中。上传成功后，PicGo 会获取到图片在 Gitee 或 GitHub 上的访问链接，并将这个链接返回给 Typora，以便 Typora 将其插入到 Markdown 文档中，实现图片的引用。</p>
<p>Gitee&#x2F;GitHub 的作用</p>
<p>GitHub 本质上是代码托管平台，但它们也可以用于存储图片等静态资源。它们提供了版本控制、仓库管理等功能，用户可以在上面创建仓库来存储各种文件。当 PicGo 将图片上传到  GitHub 仓库时，实际上是利用了这些平台的文件存储功能。这些平台会为每个上传的文件分配一个唯一的存储位置，并生成一个对应的访问链接。这个链接遵循平台的特定规则，通过这个链接，用户可以在互联网上访问到存储在  GitHub 仓库中的图片资源。同时， GitHub 都有一定的免费存储空间和流量额度，这使得用户可以在一定范围内免费使用它们来搭建个人图床，存储和分享自己的图片。</p>
<p><strong>步骤：</strong></p>
<h5 id="配置GitHub"><a href="#配置GitHub" class="headerlink" title="配置GitHub"></a><strong>配置GitHub</strong></h5><p>创建一个新的仓库用来保存图片。</p>
<p>选择<u>Add a README file</u>。注意确保选择”<u>Public</u>“，否则之后再外部访问图床中的图片，会由于没有权限导致访问失败。</p>
<p>在个人设置中，选择“<u>Developer settings</u>”。</p>
<p>随后，选择“<u>Personal access tokens</u>”，并选择其中下方的“<u>Tokens (classic)</u>”；随后，选择右上角“<u>Generate new token</u>”，并再选择“<u>Generate new token (classic)</u>”。</p>
<p>随后，在弹出的配置界面中，首先填写“<u>Note</u>”，这个是当前token的注释，也用一个和图片有关的名称来填写即可；随后，配置token的有效期。其实我们可以将有效期选择为永久，但是<u>GitHub</u>官方强烈不推荐这种<u>永久</u>期限的token，因此可以选择 <u>90</u>天，之后过期了我们继续来设置新的有效期就好。随后，配置勾选项，我这里是将全部的勾选项都选中了，但是其实只要保证 <u>repo</u> 开头的勾选项选中即可。</p>
<p>接下来，即可看到此时token的序号已经获取了，如下图所示。这里大家一定需要<u>保存一下当前的序号</u>，之后就看不到这个序号了。</p>
<p>至此，我们就完成了GitHub上的配置操作。</p>
<h5 id="配置PicGo"><a href="#配置PicGo" class="headerlink" title="配置PicGo"></a><strong>配置PicGo</strong></h5><p>将图片上传到GitHub中。下载地址：<a href="https://picgo.github.io/PicGo-Doc/">PicGo</a></p>
<p>随后，<u>安装PicGo</u>并打开，如下图所示。其中，我们需要在“<u>图床设置</u>”中找到“<u>GitHub</u>”，并配置各项信息。其中，<u>仓库名</u>就是我们前面创建的<u>Repository的名称</u>；Token就是前面我们获取的token序号；存储路径这里我们可以空着，如果大家需要指定将图片存储到仓库中的某个路径下，就在这里设置即可；分支名由于github网站的调整，仓库的默认分支名称需要修改为<u>main</u>。随后的自定义域名，可以填写<a href="https://cdn.jsdelivr.net/gh/%E2%80%9C%E7%94%A8%E6%88%B7%E5%90%8D%E2%80%9D/%E2%80%9C%E4%BB%93%E5%BA%93%E5%90%8D%E2%80%9D@master%E3%80%82">https://cdn.jsdelivr.net/gh/“用户名”/“仓库名”@master。</a></p>
<h5 id="配置Typora"><a href="#配置Typora" class="headerlink" title="配置Typora"></a><strong>配置Typora</strong></h5><p>在“<u>文件</u>”中选择“<u>偏好设置…</u>”，随后选择“<u>图像</u>”，下拉选择“<u>上传图片</u>”，勾选“<u>对本地位置的图片应用上述规则</u>”、“<u>插入是自动转义图片URL</u>”。</p>
<p>随后，选择“<u>验证图片上传选项</u>”，如果出现验证成功窗口，则表明成功配置完毕。</p>
<h5 id="上传方式"><a href="#上传方式" class="headerlink" title="上传方式"></a><strong>上传方式</strong></h5><p><strong>全局设置</strong></p>
<p>在偏好设置面板中，[插入图片时…] 下方的下拉框中，选择 [上传图片] 选项，Typora就会在你插入图片时自动上传。如果只想上传本地图片，那么就只勾选 [对本地位置的图片应用上述规则] ，如果插入的图片本来就位于网络上，但是你想再上传一遍图床，那就把 [对网络位置的图片应用上述规则] 也勾选上。</p>
<p><strong>针对每一个文件单独设置</strong></p>
<p>手下需要勾选上偏好设置面板中的 [允许根据YAML设置自动上传图片] ，然后，如果你的Markdown文件再TYAML中包含如下配置：</p>
<p><code>typora-copy-image-to: upload</code></p>
<p>当插入图片时，Typora会使用这个选项自动上传图片。</p>
<p>或者可以在菜单栏中点击 格式 &gt; 图像 &gt; 当插入本地图片时…  插入YAML配置，开启这个功能。</p>
<p><strong>上传指定的图片</strong></p>
<p>可以在Typora中，右击点击要上传的图片，选择 [上传图片] 。</p>
<p><strong>上传所有本地图片</strong></p>
<p>如果文件中含有大量的本地图片，想要一次性都上传，可以点击菜单栏中的 格式 &gt; 图像 &gt; 上传所有本地图片 。</p>
<h4 id="5-快捷键"><a href="#5-快捷键" class="headerlink" title="5.快捷键"></a><strong>5.快捷键</strong></h4><table>
<thead>
<tr>
<th>功能</th>
<th>快捷键</th>
</tr>
</thead>
<tbody><tr>
<td>新建一个新的窗口</td>
<td>Ctrl+N</td>
</tr>
<tr>
<td>创建一个新的窗口</td>
<td>Ctrl+Shift+N</td>
</tr>
<tr>
<td>打开资源管理器（初始在.md文件）</td>
<td>Ctrl+O</td>
</tr>
<tr>
<td>快速打开近期使用过的Markdown文件搜索框</td>
<td>Ctrl+P</td>
</tr>
<tr>
<td>保存</td>
<td>Ctrl+S</td>
</tr>
<tr>
<td>保存为（另存为）</td>
<td>Ctrl+Shift+S</td>
</tr>
<tr>
<td>打开偏好设置界面</td>
<td>Ctrl+,</td>
</tr>
<tr>
<td>关闭当前窗口</td>
<td>Ctrl+W</td>
</tr>
<tr>
<td>开始一个新段落</td>
<td>Enter</td>
</tr>
<tr>
<td>开始一个新行</td>
<td>Shift+Enter</td>
</tr>
<tr>
<td>复制选中的文本为Markdown语言</td>
<td>Ctrl+Shift+C</td>
</tr>
<tr>
<td>将复制的内容以纯文本的格式粘贴</td>
<td>Ctrl+Shift+V</td>
</tr>
<tr>
<td>在段落内选中一句\在表内选中一行</td>
<td>Ctrl+L</td>
</tr>
<tr>
<td>删除表中的一行</td>
<td>Ctrl+Shift+Backspace</td>
</tr>
<tr>
<td>选中一个段元格</td>
<td>Ctrl+E</td>
</tr>
<tr>
<td>选择一个单元格</td>
<td>Ctrl+D</td>
</tr>
<tr>
<td>跳转到文章最顶部</td>
<td>Ctrl+Home</td>
</tr>
<tr>
<td>跳转到文章底部</td>
<td>Ctrl+End</td>
</tr>
<tr>
<td>跳转到光标所在位置</td>
<td>Ctrl+J</td>
</tr>
<tr>
<td>删除一个单词</td>
<td>Ctrl+Shift+D</td>
</tr>
<tr>
<td>查找</td>
<td>Ctrl+F</td>
</tr>
<tr>
<td>查找已经查找的的上一个单词</td>
<td>Shift+F3\Shift+Enter</td>
</tr>
<tr>
<td>查找当前查找的的下一个单词</td>
<td>F3\Enter</td>
</tr>
<tr>
<td>替换</td>
<td>Ctrl+H</td>
</tr>
<tr>
<td>设置文本为标题1-6</td>
<td>Ctrl+ 1&#x2F;2&#x2F;3&#x2F;4&#x2F;5&#x2F;6</td>
</tr>
<tr>
<td>设置文本为段落</td>
<td>Ctrl+0</td>
</tr>
<tr>
<td>给标题升1级</td>
<td>Ctrl+&#x3D;</td>
</tr>
<tr>
<td>给标题降1级</td>
<td>Ctrl±</td>
</tr>
<tr>
<td>插入表</td>
<td>Ctrl+T</td>
</tr>
<tr>
<td>插入代码块</td>
<td>Ctrl+Shift+k</td>
</tr>
<tr>
<td>插入数学符号的文本</td>
<td>Ctrl+Shift+M</td>
</tr>
<tr>
<td>插入引用代码</td>
<td>Ctrl+Shift+Q</td>
</tr>
<tr>
<td>插入有序列表</td>
<td>Ctrl+Shift+[</td>
</tr>
<tr>
<td>插入无序列表</td>
<td>Ctrl+Shift+]</td>
</tr>
<tr>
<td>缩进</td>
<td>Tab \ Ctrl+[</td>
</tr>
<tr>
<td>取消缩进</td>
<td>Shift+Tab \ Ctrl+]</td>
</tr>
<tr>
<td>加粗字体</td>
<td>Ctrl+B</td>
</tr>
<tr>
<td>文本删除线</td>
<td>Alt+Shift+5</td>
</tr>
<tr>
<td>斜体</td>
<td>Ctrl+I</td>
</tr>
<tr>
<td>标记为代码</td>
<td>Ctrl+Shift+5</td>
</tr>
<tr>
<td>插入超链接</td>
<td>Ctrl+K</td>
</tr>
<tr>
<td>插入图片链接</td>
<td>Ctrl+Shift+I</td>
</tr>
<tr>
<td>消除文本格式</td>
<td>Ctrl+\</td>
</tr>
<tr>
<td>切换侧边栏</td>
<td>Ctrl+Shift+L</td>
</tr>
<tr>
<td>切换成出大纲</td>
<td>Ctrl+Shift+1</td>
</tr>
<tr>
<td>切换到文件栏</td>
<td>Ctrl+Shift+2</td>
</tr>
<tr>
<td>展示文件目录</td>
<td>Ctrl+Shift+3</td>
</tr>
<tr>
<td>切换成源码格式（Markdown）</td>
<td>Ctrl+&#x2F;</td>
</tr>
<tr>
<td>专注模式</td>
<td>F8</td>
</tr>
<tr>
<td>打字机模式</td>
<td>F9</td>
</tr>
<tr>
<td>全屏模式</td>
<td>F11</td>
</tr>
<tr>
<td>扩大</td>
<td>Ctrl+Shift+&#x3D;</td>
</tr>
<tr>
<td>缩小</td>
<td>Ctrl+Shift±</td>
</tr>
<tr>
<td>重置大小（好像windows有快捷键冲突）</td>
<td>Ctrl+Shift+0</td>
</tr>
<tr>
<td>在两个打开的文件进行切换</td>
<td>Ctrl+Tab</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo+github 部署博客</title>
    <url>/2025/01/23/hexo-github-%E9%83%A8%E7%BD%B2%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[]]></content>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>1月22日</title>
    <url>/2025/01/22/1%E6%9C%8822%E6%97%A5/</url>
    <content><![CDATA[<p>创建页面（导航栏列表项）<br>列表项名：分类<br>hexo new page categories<br>然后将以下代码粘贴到文件中：<br>&#x2F;source&#x2F;categories&#x2F;index.md<br>    —<br>    title: categories<br>    type: categories<br>    layout: “categories”<br>    —</p>
]]></content>
      <categories>
        <category>页面部署</category>
      </categories>
      <tags>
        <tag>进程</tag>
      </tags>
  </entry>
</search>
