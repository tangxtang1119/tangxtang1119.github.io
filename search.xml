<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>VMware虚拟机</title>
    <url>/2025/02/10/VMware%E8%99%9A%E6%8B%9F%E6%9C%BA/</url>
    <content><![CDATA[<h2 id="📚专业术语"><a href="#📚专业术语" class="headerlink" title="📚专业术语"></a>📚专业术语</h2><p>.iso：是电脑上光盘镜像（CD Mirror）的存储格式之一，因为其是i根据ISO-9660有关CD-ROM文件系统标准存储的文件，许哦一通常在电脑中以后缀,iso命名，俗称iso镜像文件。</p>
<p>镜像文件：镜像文件可以类比为图书馆的一本书的副本。一本珍贵的书，想要确保即使在原书损坏或丢失的情况下，书的内容仍然可以得到保留和使用。为此，制作了这本书的精确复制品，这个复制品包含了原书的所有页面和文字，但它可能是以特殊的格式存储的，比如扫描后的PDF文件或者一系列图片。</p>
<h2 id="🖥创建新的虚拟机"><a href="#🖥创建新的虚拟机" class="headerlink" title="🖥创建新的虚拟机"></a>🖥创建新的虚拟机</h2><h3 id="1-Window系统"><a href="#1-Window系统" class="headerlink" title="1.Window系统"></a>1.Window系统</h3><p>点击软件首页的创建新的虚拟机，进入新建导向</p>
<p>选择自定义（高级）然后点击下一步</p>
<p><img src="https://cdn.jsdelivr.net/gh/tangxtang1119/Pictures@master/image-20250206165405761.png"></p>
<p>硬件兼容性选择软件版本，然后点击下一步</p>
<p><img src="https://cdn.jsdelivr.net/gh/tangxtang1119/Pictures@master/image-20250206182831247.png"></p>
<p>选择安装程序光盘映像文件（iso），选择安装好的光盘映像文件，可以去微软官网上去下载，然后点击下一步</p>
<p><img src="https://cdn.jsdelivr.net/gh/tangxtang1119/Pictures@master/image-20250206182926495.png"></p>
<p>完成windows简易安装信息，然后点击下一步</p>
<p><img src="https://cdn.jsdelivr.net/gh/tangxtang1119/Pictures@master/image-20250206182950623.png"></p>
<p>对新建的虚拟机进行命名，名字注意区分其他并易懂，还有保存位置，然后点击下一步</p>
<p><img src="https://cdn.jsdelivr.net/gh/tangxtang1119/Pictures@master/image-20250206183009197.png"></p>
<p>选择虚拟机的固件类型，即引导设备，然后点击下一步</p>
<p><img src="https://cdn.jsdelivr.net/gh/tangxtang1119/Pictures@master/image-20250206183034037.png"></p>
<p>选择虚拟机处理器配置，处理器数量、每个处理器的内核数量，然后点击下一步</p>
<p><img src="https://cdn.jsdelivr.net/gh/tangxtang1119/Pictures@master/image-20250206183051953.png"></p>
<p>设置虚拟机的内存，不要太大也不要太小，然后点击下一步</p>
<p><img src="https://cdn.jsdelivr.net/gh/tangxtang1119/Pictures@master/image-20250206183110891.png"></p>
<p>选择网络模式，使用网络地址转换（NAT），然后点击下一步</p>
<p><img src="https://cdn.jsdelivr.net/gh/tangxtang1119/Pictures@master/image-20250206183132574.png"></p>
<p>选择I&#x2F;O控制器类型，按照新建向导的推荐选择，然后点击下一步</p>
<p><img src="https://cdn.jsdelivr.net/gh/tangxtang1119/Pictures@master/image-20250206183147255.png"></p>
<p>选择磁盘类型，按照新建向导的推荐选择，然后点击下一步</p>
<p><img src="https://cdn.jsdelivr.net/gh/tangxtang1119/Pictures@master/image-20250207122431324.png"></p>
<p>选择磁盘容量，然后点击下一步</p>
<p><img src="https://cdn.jsdelivr.net/gh/tangxtang1119/Pictures@master/image-20250207122452975.png"></p>
<p>确定号新建的虚拟机的设置信息，然后点击下一步</p>
<p><img src="https://cdn.jsdelivr.net/gh/tangxtang1119/Pictures@master/image-20250207122514411.png"></p>
<p>至此，Windows10虚拟机创建成功，等待启动然后设置，激活系统。</p>
<h3 id="2-Linux系统"><a href="#2-Linux系统" class="headerlink" title="2.Linux系统"></a><strong>2.Linux系统</strong></h3><p>点击软件首页的创建新的虚拟机，进入新建导向</p>
<p>选择自定义（高级）然后点击下一步</p>
<p><img src="https://cdn.jsdelivr.net/gh/tangxtang1119/Pictures@master/image-20250206163543615.png"></p>
<p>保持默认不变，然后点击下一步</p>
<p><img src="https://cdn.jsdelivr.net/gh/tangxtang1119/Pictures@master/image-20250206163649773.png"></p>
<p>选择稍后安装操作系统，然后点击下一步</p>
<p><img src="https://cdn.jsdelivr.net/gh/tangxtang1119/Pictures@master/image-20250206164001987.png"></p>
<p>在选择客户机i操作系统时选择Linux系统，版本选择自己准备的ISO文件的版本，一定要匹配，然后单击下一步</p>
<p><img src="https://cdn.jsdelivr.net/gh/tangxtang1119/Pictures@master/image-20250206164041840.png"></p>
<p>给本虚拟机命名，然后点击下一步</p>
<p><img src="https://cdn.jsdelivr.net/gh/tangxtang1119/Pictures@master/image-20250206164349880.png"></p>
<p>处理器配置，为虚拟机指定处理器数量，设置为2，然后点击下一步</p>
<p><img src="https://cdn.jsdelivr.net/gh/tangxtang1119/Pictures@master/image-20250206164527143.png"></p>
<p>设置内存，一般两个G，然后点击下一步</p>
<p><img src="https://cdn.jsdelivr.net/gh/tangxtang1119/Pictures@master/image-20250206164616967.png"></p>
<p>后续一直保持默认推荐，然后点击下一步</p>
<p>确认新建虚拟机的基本信息，然后点击下一步</p>
<p><img src="https://cdn.jsdelivr.net/gh/tangxtang1119/Pictures@master/image-20250206165452662.png"></p>
<p>至此虚拟机的创建已完成，然后检查一下网络配置</p>
<p>点击编辑&gt;虚拟网络编辑器，查看VMnet8，子网的ip地址是否和NAT设置中的ip地址前三位一致。正常来说是默认配置好的。只是检查以下，不是乱去设置。</p>
<p>接下来去给<strong>虚拟机配置镜像</strong>。</p>
<p>点击编辑虚拟机设置&gt;CD&#x2F;DVD&gt;选择使用镜像文件，点击浏览找到提前下载好的镜像文件，然后点确定，完成后点击开启虚拟机。</p>
<p>然后点击install CentOS，选项变白就是选中了</p>
<p><img src="https://cdn.jsdelivr.net/gh/tangxtang1119/Pictures@master/image-20250206170409114.png"></p>
<p>然后选中想要的语言，选择简体中文就行,点击继续</p>
<p><img src="https://cdn.jsdelivr.net/gh/tangxtang1119/Pictures@master/image-20250206170558494.png"></p>
<p>进入安装信息摘要基本不用改，完成以下安装位置确认，然后点击安装。设置Root密码。创建用户根据个人需要，就是权限比较低的用户。</p>
<p>至此安装成功，点击重启就行。</p>
<p><img src="https://cdn.jsdelivr.net/gh/tangxtang1119/Pictures@master/image-20250206171032438.png"></p>
<p>注意进入后输入用户和密码，密码是不会显示的，输完后回车就行，出现root@localhost就是成功了。</p>
<p>输入cd &#x2F;，再输入ll，查看所有文件。(注意cd 后面要有一个空格)</p>
<p>接下来配置虚拟机的网络。</p>
<p><img src="https://cdn.jsdelivr.net/gh/tangxtang1119/Pictures@master/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202025-02-06%20171537.jpg"></p>
<p>手动输入，以下路径，虚拟机内无法复制粘贴</p>
<p><img src="https://cdn.jsdelivr.net/gh/tangxtang1119/Pictures@master/image-20250206171841943.png" alt="image-20250206171841943"></p>
<p>然后找到ifcfg-ens33，打开它编辑</p>
<p><img src="https://cdn.jsdelivr.net/gh/tangxtang1119/Pictures@master/image-20250206171953000.png" alt="image-20250206171953000"></p>
<p>使用vi ifcfg-ens33，进入修改。按i，进入修改模式，将BOOTPROTO&#x3D;dhcp（默认），ONBOOT修改为yes。然后按esc退出修改模式。输入:wq，回车强制保存。</p>
<p><img src="https://cdn.jsdelivr.net/gh/tangxtang1119/Pictures@master/image-20250206172438904.png"></p>
<p>接下来就是去重启网络，service network restart，然后测试是否能访问外网，ping一下百度，出现连接网速表示成功，ctrl+c结束。</p>
<p>后续参考视频【【2024最新】Vmware虚拟机安装Linux系统及配置网络超详细教学安装Centos使用Vmare安装附带安装包及镜像】<a href="https://www.bilibili.com/video/BV1MriFeaEci?vd_source=cbd0e7aa3299fa0fcc330c5ee16869bc">https://www.bilibili.com/video/BV1MriFeaEci?vd_source=cbd0e7aa3299fa0fcc330c5ee16869bc</a></p>
<h2 id="📺操作系统的操作模式"><a href="#📺操作系统的操作模式" class="headerlink" title="📺操作系统的操作模式"></a>📺操作系统的操作模式</h2><p>对操作系统的使用，有2种使用形式：</p>
<ul>
<li><p>图形化页面使用操作系统</p>
</li>
<li><p>以命令的形式使用操作系统</p>
</li>
</ul>
<p>不论是Windows系统还是Linux系统或是MacOS系统，以获得图形化反馈的形式去使用操作系统。</p>
<ul>
<li><p>图形化：使用操作系统提供的图形化页面，以获得图形化反馈形式去使用操作系统。</p>
</li>
<li><p>命令行：使用操作系统提供的各类命令，以获得字符反馈的形式去使用操作系统。</p>
</li>
</ul>
<p>无论是企业开发亦或是个人开发，使用Linux擦欧总系统，多数都是使用的：命令行。</p>
<p>这是因为：</p>
<ul>
<li>Linux从诞生至今，在图形化页面的优化上，并未重点发力。所以LInux操作系统的图形化页面：不好用、不稳定。</li>
<li>在开发中，使用命令行形式，效率更高，更加直观，并且资源占用低、程序运行更稳定。</li>
</ul>
<h2 id="💻网络连接的三种模式"><a href="#💻网络连接的三种模式" class="headerlink" title="💻网络连接的三种模式"></a>💻网络连接的三种模式</h2><h3 id="1-桥接模式：直接连接物理网络"><a href="#1-桥接模式：直接连接物理网络" class="headerlink" title="1.桥接模式：直接连接物理网络"></a>1.桥接模式：直接连接物理网络</h3><p>使用主机中的物理网卡VMnet0，有线网卡或者无线网卡，可以连接主机，并且可以访问局域内的计算机，如果主机可以连接外网，虚拟机也可以连接外网，此时物理主机相当于一个交换机，把所有桥接模式的虚拟机都连接在同一个交换机上，自己在这个局域网中。注意：容易造成IP冲突。</p>
<h3 id="2-NAT模式：用于共享主机的IP地址"><a href="#2-NAT模式：用于共享主机的IP地址" class="headerlink" title="2.NAT模式：用于共享主机的IP地址"></a>2.NAT模式：用于共享主机的IP地址</h3><p>使用的是虚拟机的网卡VMnet8，可以连接主机，也可以来连接外网，虚拟机IP地址经过NAT转换，与物理机IP地址不在同一网段，所以不能访问局域网内的计算机。</p>
<h3 id="3-仅主机模式：与主机共享的专用网络"><a href="#3-仅主机模式：与主机共享的专用网络" class="headerlink" title="3.仅主机模式：与主机共享的专用网络"></a>3.仅主机模式：与主机共享的专用网络</h3><p>使用的是虚拟机中的VMnet1，可以连接到主机，不能访问局域网内的计算机，也不能连接外网，当我们要组成一个与物理网络相隔离的虚拟网络时可以选择仅主机模式。</p>
<h2 id="📼虚拟机克隆"><a href="#📼虚拟机克隆" class="headerlink" title="📼虚拟机克隆"></a>📼虚拟机克隆</h2><p>如果已经安装了一台linux操作系统，还想再更多的，没必要再重新安装，只需要克隆就行。</p>
<h3 id="1-直接拷贝一份安装好的虚拟机文件"><a href="#1-直接拷贝一份安装好的虚拟机文件" class="headerlink" title="1.直接拷贝一份安装好的虚拟机文件"></a>1.直接拷贝一份安装好的虚拟机文件</h3><p>将虚拟机文件拷贝到另一个盘的文件夹下，文件名可以重命名，也可以保留原名。通过VMware的打开文件，打开拷贝虚拟机文件。</p>
<h3 id="2-使用VMware的克隆操作"><a href="#2-使用VMware的克隆操作" class="headerlink" title="2.使用VMware的克隆操作"></a>2.使用VMware的克隆操作</h3><p>注意：克隆时，需要先关闭正在运行的linux系统。</p>
<p>虚拟机&gt;右键至管理&gt;克隆</p>
<p>克隆类型有两种：创建链接克隆、创建完整克隆。</p>
<p>创建链接克隆，是对原虚拟机的引用，所需要的存储磁盘空间较少，访问的是原虚拟机，是同一个系统。</p>
<p>创建完整克隆：是原虚拟机当前状态的完整副本，此选项使得虚拟机完全独立，需要较多的存储磁盘空间。</p>
<h2 id="📷虚拟机快照"><a href="#📷虚拟机快照" class="headerlink" title="📷虚拟机快照"></a>📷虚拟机快照</h2><p>如果在使用虚拟机系统的时候，想回到原先的某一个状态，也就是说担心有些操作造成系统异常，需要回到原先某个正常运行的状态，VMware提供了一个这样的功能，就叫做快照管理。</p>
<p>推荐关机操作，没关机也可以就是会时间久一点。</p>
<p><img src="https://cdn.jsdelivr.net/gh/tangxtang1119/Pictures@master/image-20250210163939993.png"></p>
<h2 id="📃基础命令"><a href="#📃基础命令" class="headerlink" title="📃基础命令"></a>📃基础命令</h2><h3 id="1-目录结构"><a href="#1-目录结构" class="headerlink" title="1.目录结构"></a>1.目录结构</h3><p>Linux的目录结构是一个树形结构，Windows系统可以拥有多个盘符，即顶级目录，如C盘、D盘、E盘等。</p>
<p>Linux没有盘符这个概念，只有一个顶级目录  &#x2F;  ，所有文件都在它下面。</p>
<p>路径描述：</p>
<ul>
<li>Linux系统中，路径之间的层级关系，使用：&#x2F; 表示</li>
<li>Windows系统中，路径之间的层级关系，使用：\ 表示</li>
</ul>
<h3 id="2-Linux命令入门"><a href="#2-Linux命令入门" class="headerlink" title="2.Linux命令入门"></a>2.Linux命令入门</h3><h4 id="（1）基础介绍"><a href="#（1）基础介绍" class="headerlink" title="（1）基础介绍"></a>（1）基础介绍</h4><p>学习Linux，本质是学习在命令行下熟练使用Linux的各类命令。</p>
<ul>
<li>命令行：即Linux终端（Terminal），是一种命令提示符页面。以纯“字符”的形式操作系统，可以使用各种字符化命令对系统发出操作指令。</li>
<li>命令：即Linux程序。一个命令就是一个Linux的程序。命令没有图形化页面，可以在命令行（终端中）提供字符化的反馈。</li>
</ul>
<p>无论是什么命令，用于什么用途，在Linux中，命令有其通用的格式：</p>
<p>command  [-options]  [parameter]</p>
<ul>
<li>command：命令本身</li>
<li>-options：[可选，非必填]命令的一些选项，可以通过选项控制命令的行为细节</li>
<li>parameter：[可选，非必填]命令的参数，多数用于命令的指向目标等</li>
</ul>
<p><font size=3 color="red">语法中的[]，表示可选的意思</font></p>
<p>示例：</p>
<ul>
<li>ls -l&#x2F;home&#x2F;itheima，ls是命令本身，-l是选项，&#x2F;home&#x2F;itheima是参数<ul>
<li>意思是以列表的形式，显示&#x2F;home&#x2F;itheima目录内的内容</li>
</ul>
</li>
<li>cp -r test1 test2，cp是命令本身，-r是选项，test1和test2是参数<ul>
<li>意思是复制文件夹test1成为test2</li>
</ul>
</li>
</ul>
<h4 id="（2）ls命令"><a href="#（2）ls命令" class="headerlink" title="（2）ls命令"></a>（2）ls命令</h4><p>ls命令的作用是列出目录下的内容，语法细节如下：</p>
<p>ls  [-a -l -h]  [Linux路径]</p>
<ul>
<li>-a -l -h是可选的选项</li>
<li>Linux路径是此命令可选参数</li>
</ul>
<p>当不使用选项和参数，直接使用ls命令本体，表示：以平铺形式，列出当前工作目录下的内容</p>
<p><img src="https://cdn.jsdelivr.net/gh/tangxtang1119/Pictures@master/image-20250210173128911.png"></p>
<h3 id="3-目录切换（cd-pwd）"><a href="#3-目录切换（cd-pwd）" class="headerlink" title="3.目录切换（cd&#x2F;pwd）"></a>3.目录切换（cd&#x2F;pwd）</h3><h3 id="4-路径命令"><a href="#4-路径命令" class="headerlink" title="4.路径命令"></a>4.路径命令</h3><h3 id="5-创建目录（mkdir）"><a href="#5-创建目录（mkdir）" class="headerlink" title="5.创建目录（mkdir）"></a>5.创建目录（mkdir）</h3><h3 id="6-文件操作（touch、cat、more、cp、mv）"><a href="#6-文件操作（touch、cat、more、cp、mv）" class="headerlink" title="6.文件操作（touch、cat、more、cp、mv）"></a>6.文件操作（touch、cat、more、cp、mv）</h3><h3 id="7-查找命令（which、find）"><a href="#7-查找命令（which、find）" class="headerlink" title="7.查找命令（which、find）"></a>7.查找命令（which、find）</h3><h3 id="8-grep、wc和管道符"><a href="#8-grep、wc和管道符" class="headerlink" title="8.grep、wc和管道符"></a>8.grep、wc和管道符</h3>]]></content>
      <tags>
        <tag>软件</tag>
      </tags>
  </entry>
  <entry>
    <title>Ghidra的安装</title>
    <url>/2025/02/06/Ghidra%E7%9A%84%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>my plan</title>
    <url>/2025/02/05/my-plan/</url>
    <content><![CDATA[<p>以下是半年学习计划，分为基础构建、专业提升、实战应用三个阶段。计划兼顾零基础起点和恶意软件分析的专业需求，注重高效学习和实践结合：</p>
<hr>
<h3 id="📅-第一阶段：计算机基础与编程入门（第1-2个月）"><a href="#📅-第一阶段：计算机基础与编程入门（第1-2个月）" class="headerlink" title="📅 第一阶段：计算机基础与编程入门（第1-2个月）"></a><strong>📅 第一阶段：计算机基础与编程入门（第1-2个月）</strong></h3><p><strong>目标</strong>：掌握计算机基础操作、网络基础、Python和C语言基础。</p>
<ol>
<li><p><strong>计算机基础（1周）</strong></p>
<ul>
<li><strong>操作系统</strong>：学习Windows&#x2F;Linux基础命令（文件管理、进程管理）、虚拟机安装（VMware&#x2F;VirtualBox）。</li>
<li><strong>网络基础</strong>：理解IP地址、端口、TCP&#x2F;UDP协议，用Wireshark抓包分析HTTP流量。</li>
</ul>
</li>
<li><p><strong>编程入门（3周）</strong></p>
<ul>
<li><strong>Python</strong>：学习语法、文件操作、正则表达式、网络请求（<code>requests</code>库），完成简单爬虫或日志分析脚本。</li>
<li><strong>C语言</strong>：掌握指针、内存管理、结构体，编写简单的内存操作程序（如模拟缓冲区溢出）。</li>
</ul>
</li>
<li><p><strong>工具准备（1周）</strong></p>
<ul>
<li>搭建虚拟机实验环境（Windows + Linux双系统）。</li>
<li>安装基础工具：IDA Pro Free版、Ghidra、Wireshark、Process Monitor。</li>
</ul>
</li>
</ol>
<hr>
<h3 id="📚-第二阶段：信息安全与恶意软件分析基础（第3-4个月）"><a href="#📚-第二阶段：信息安全与恶意软件分析基础（第3-4个月）" class="headerlink" title="📚 第二阶段：信息安全与恶意软件分析基础（第3-4个月）"></a><strong>📚 第二阶段：信息安全与恶意软件分析基础（第3-4个月）</strong></h3><p><strong>目标</strong>：掌握安全核心概念，学习静态&#x2F;动态分析基础。</p>
<ol>
<li><p><strong>信息安全基础（2周）</strong></p>
<ul>
<li><strong>密码学</strong>：AES&#x2F;RSA算法原理，使用Python实现加密解密。</li>
<li><strong>漏洞类型</strong>：缓冲区溢出、Shellcode注入原理，用C编写漏洞示例程序。</li>
<li><strong>网络攻防</strong>：分析ARP欺骗案例，用Scapy模拟数据包伪造。</li>
</ul>
</li>
<li><p><strong>恶意软件分析入门（4周）</strong></p>
<ul>
<li><strong>静态分析</strong>：<ul>
<li>使用PEiD分析样本的编译器和加壳情况。</li>
<li>用Ghidra反编译样本，识别关键函数（如<code>CreateProcess</code>、注册表操作）。</li>
</ul>
</li>
<li><strong>动态分析</strong>：<ul>
<li>在虚拟机中运行样本，用Process Monitor监控文件&#x2F;注册表行为。</li>
<li>使用x64dbg调试样本，跟踪API调用链（如<code>LoadLibrary</code>、<code>GetProcAddress</code>）。</li>
</ul>
</li>
<li><strong>工具进阶</strong>：<ul>
<li>编写Python脚本自动化提取样本字符串特征。</li>
<li>配置Cuckoo沙箱分析样本的恶意行为报告。</li>
</ul>
</li>
</ul>
</li>
</ol>
<hr>
<h3 id="🔍-第三阶段：逆向工程与实战进阶（第5-6个月）"><a href="#🔍-第三阶段：逆向工程与实战进阶（第5-6个月）" class="headerlink" title="🔍 第三阶段：逆向工程与实战进阶（第5-6个月）"></a><strong>🔍 第三阶段：逆向工程与实战进阶（第5-6个月）</strong></h3><p><strong>目标</strong>：掌握逆向工程核心技能，完成真实样本分析。</p>
<ol>
<li><p><strong>逆向工程深化（3周）</strong></p>
<ul>
<li><strong>汇编语言</strong>：学习x86&#x2F;x64指令集，用IDA Pro分析样本的反汇编代码。</li>
<li><strong>反混淆技术</strong>：<ul>
<li>手动脱UPX壳（使用OllyDbg的单步跟踪法）。</li>
<li>分析字符串加密逻辑，编写Python解密脚本。</li>
</ul>
</li>
<li><strong>高级调试</strong>：<ul>
<li>使用IDA Pro的远程调试功能分析Linux恶意软件。</li>
<li>通过修改寄存器值绕过反调试检测。</li>
</ul>
</li>
</ul>
</li>
<li><p><strong>实战项目（3周）</strong></p>
<ul>
<li><strong>样本分析</strong>：<ol>
<li>分析勒索软件（如HelloKitty）的加密流程和密钥生成逻辑。</li>
<li>逆向远控木马（如Poison Ivy）的C2通信协议。</li>
</ol>
</li>
<li><strong>报告撰写</strong>：<ul>
<li>按照MITRE ATT&amp;CK框架标注样本的攻击技术（如T1055进程注入）。</li>
<li>使用YARA编写规则检测同类样本。</li>
</ul>
</li>
</ul>
</li>
<li><p><strong>知识整合（1周）</strong></p>
<ul>
<li>复现CTF逆向题目（如<a href="https://flare-on.com/">flare-on</a>历年赛题）。</li>
<li>参与漏洞平台众测（如HackerOne的简单任务）。</li>
</ul>
</li>
</ol>
<hr>
<h3 id="📦-资源推荐"><a href="#📦-资源推荐" class="headerlink" title="📦 资源推荐"></a><strong>📦 资源推荐</strong></h3><ul>
<li><strong>书籍</strong>：《逆向工程核心原理》《加密与解密》</li>
<li><strong>靶场</strong>：<a href="https://any.run/">Any.Run</a>（交互式沙箱）、<a href="https://malwaretrafficanalysis.net/">MalwareTrafficAnalysis</a>（带流量分析的样本）</li>
<li><strong>样本来源</strong>：VirusTotal（需谨慎）、<a href="https://github.com/ytisf/theZoo">Zoo</a>（GitHub合法样本库）</li>
</ul>
<hr>
<h3 id="⚠️-关键注意事项"><a href="#⚠️-关键注意事项" class="headerlink" title="⚠️ 关键注意事项"></a><strong>⚠️ 关键注意事项</strong></h3><ol>
<li><strong>实验安全</strong>：所有分析必须在隔离的虚拟机中进行，禁用共享文件夹和剪贴板。</li>
<li><strong>法律合规</strong>：仅分析开源样本或明确授权的数据，避免触碰灰色地带。</li>
<li><strong>效率技巧</strong>：使用Jupyter Notebook记录分析过程，搭配截图和代码片段提升复盘效率。</li>
</ol>
<hr>
<p><strong>调整建议</strong>：如果遇到瓶颈（如逆向工程难以突破），可暂时跳过深入理论，通过分析简单样本（如VBS脚本病毒）建立信心。坚持每天记录学习日志，重点标注未理解的概念，每周集中解决。遇到工具使用问题，优先查阅官方文档和GitHub Issue。</p>
<p>针对<strong>第一阶段（计算机基础与编程入门）</strong>的详细学习平台和资源推荐，兼顾零基础学习者的理解能力和实践需求：</p>
<hr>
<h3 id="💻-计算机基础学习平台"><a href="#💻-计算机基础学习平台" class="headerlink" title="💻 计算机基础学习平台"></a><strong>💻 计算机基础学习平台</strong></h3><h4 id="1-操作系统与Linux入门"><a href="#1-操作系统与Linux入门" class="headerlink" title="1. 操作系统与Linux入门"></a><strong>1. 操作系统与Linux入门</strong></h4><table>
<thead>
<tr>
<th>平台&#x2F;资源</th>
<th>特点</th>
<th>推荐内容</th>
</tr>
</thead>
<tbody><tr>
<td><strong><a href="https://learn.microsoft.com/zh-cn/windows/">微软官方文档</a></strong></td>
<td>权威的Windows操作指南</td>
<td>Windows文件管理、进程管理、CMD&#x2F;PowerShell基础命令</td>
</tr>
<tr>
<td><strong><a href="https://www.runoob.com/linux/linux-tutorial.html">菜鸟教程 - Linux</a></strong></td>
<td>中文零基础教程</td>
<td>Linux常用命令（<code>ls</code>&#x2F;<code>cd</code>&#x2F;<code>grep</code>&#x2F;<code>chmod</code>）</td>
</tr>
<tr>
<td><strong><a href="https://www.youtube.com/c/NetworkChuck">YouTube: NetworkChuck</a></strong></td>
<td>趣味实操演示</td>
<td>“Linux for Hackers”系列（搭配虚拟机操作）</td>
</tr>
</tbody></table>
<h4 id="2-网络基础"><a href="#2-网络基础" class="headerlink" title="2. 网络基础"></a><strong>2. 网络基础</strong></h4><table>
<thead>
<tr>
<th>平台&#x2F;资源</th>
<th>特点</th>
<th>推荐内容</th>
</tr>
</thead>
<tbody><tr>
<td><strong><a href="https://www.coursera.org/">Coursera - 计算机网络基础</a></strong></td>
<td>体系化理论教学</td>
<td>密歇根大学《计算机网络导论》（中文字幕）</td>
</tr>
<tr>
<td><strong><a href="https://www.wireshark.org/docs/">Wireshark官方教程</a></strong></td>
<td>实战导向</td>
<td>抓包分析HTTP&#x2F;TCP协议（配合<a href="https://wiki.wireshark.org/SampleCaptures">SampleCaptures</a>）</td>
</tr>
<tr>
<td><strong><a href="https://www.bilibili.com/">B站：湖科大王道计算机网络</a></strong></td>
<td>中文系统讲解</td>
<td>考研向课程，但适合打基础</td>
</tr>
</tbody></table>
<hr>
<h3 id="👨💻-编程入门平台"><a href="#👨💻-编程入门平台" class="headerlink" title="👨💻 编程入门平台"></a><strong>👨💻 编程入门平台</strong></h3><h4 id="1-Python学习"><a href="#1-Python学习" class="headerlink" title="1. Python学习"></a><strong>1. Python学习</strong></h4><table>
<thead>
<tr>
<th>平台&#x2F;资源</th>
<th>特点</th>
<th>推荐内容</th>
</tr>
</thead>
<tbody><tr>
<td><strong><a href="https://www.codecademy.com/learn/learn-python-3">Codecademy</a></strong></td>
<td>交互式编程</td>
<td>免费版Python 3语法和文件操作</td>
</tr>
<tr>
<td><strong><a href="https://docs.python.org/zh-cn/3/tutorial/">Python官网教程</a></strong></td>
<td>权威文档</td>
<td>正则表达式（<code>re</code>模块）、网络请求（<code>requests</code>库）</td>
</tr>
<tr>
<td><strong><a href="https://www.bilibili.com/">B站：小甲鱼零基础学Python</a></strong></td>
<td>中文趣味教学</td>
<td>配套《零基础入门学习Python》书籍</td>
</tr>
</tbody></table>
<h4 id="2-C语言学习"><a href="#2-C语言学习" class="headerlink" title="2. C语言学习"></a><strong>2. C语言学习</strong></h4><table>
<thead>
<tr>
<th>平台&#x2F;资源</th>
<th>特点</th>
<th>推荐内容</th>
</tr>
</thead>
<tbody><tr>
<td><strong><a href="https://www.runoob.com/cprogramming/c-tutorial.html">菜鸟教程 - C语言</a></strong></td>
<td>简洁中文教程</td>
<td>指针、结构体、内存管理专题</td>
</tr>
<tr>
<td><strong><a href="https://www.learn-c.org/">Learn-C.org</a></strong></td>
<td>在线编译器</td>
<td>实时练习指针和内存操作代码</td>
</tr>
<tr>
<td><strong><a href="https://www.bilibili.com/">B站：浙江大学翁恺C语言</a></strong></td>
<td>高校精品课</td>
<td>深入理解指针与内存模型</td>
</tr>
</tbody></table>
<hr>
<h3 id="🔧-工具准备资源"><a href="#🔧-工具准备资源" class="headerlink" title="🔧 工具准备资源"></a><strong>🔧 工具准备资源</strong></h3><table>
<thead>
<tr>
<th>工具</th>
<th>学习资源</th>
<th>重点内容</th>
</tr>
</thead>
<tbody><tr>
<td><strong>虚拟机（VMware&#x2F;VirtualBox）</strong></td>
<td><a href="https://docs.vmware.com/cn/VMware-Workstation-Pro/index.html">VMware官方指南</a></td>
<td>创建隔离的Windows&#x2F;Linux实验环境</td>
</tr>
<tr>
<td><strong>IDA Pro Free</strong></td>
<td><a href="https://hex-rays.com/ida-free/">官方快速入门</a></td>
<td>基本反汇编操作（函数识别、交叉引用）</td>
</tr>
<tr>
<td><strong>Process Monitor</strong></td>
<td><a href="https://search.bilibili.com/all?keyword=Process%20Monitor">B站实操演示</a></td>
<td>监控恶意软件的文件&#x2F;注册表行为</td>
</tr>
</tbody></table>
<hr>
]]></content>
      <tags>
        <tag>信息安全</tag>
        <tag>恶意软件分析</tag>
      </tags>
  </entry>
  <entry>
    <title>Typora的使用</title>
    <url>/2025/01/24/Typora%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<h2 id="Typora是什么？"><a href="#Typora是什么？" class="headerlink" title="Typora是什么？"></a>Typora是什么？</h2><p>​		Typora是一款由Abner Lee开发的轻量级Markdown编辑器，适用于OS X、Windows和Linux三种操作系统，是一款免费软件。与其他Markdown编辑器不同的是，Typora没有采用源代码和预览双栏显示的方式，而是采用所见即所得的编辑方式，实现了即时预览的功能，但也可切换至源代码编辑模式</p>
<span id="more"></span>


<h2 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h2><h4 id="1-标题"><a href="#1-标题" class="headerlink" title="1.标题"></a><strong>1.标题</strong></h4><p>快捷键，Ctrl+数字（1、2、3、4、5、6），一共六个数字由大到小六个标题等级。</p>
<h4 id="2-文本"><a href="#2-文本" class="headerlink" title="2.文本"></a><strong>2.文本</strong></h4><h6 id="2-1-分割线"><a href="#2-1-分割线" class="headerlink" title="2.1 分割线"></a>2.1 分割线</h6><p>三个+++、***、或—，如下：</p>
<hr>
<h6 id="2-2-下划线"><a href="#2-2-下划线" class="headerlink" title="2.2 下划线"></a>2.2 下划线</h6><p>Ctrl+U或&lt; u &gt;标签包住文本，如：<u>kedai</u></p>
<h6 id="2-3-删除线"><a href="#2-3-删除线" class="headerlink" title="2.3 删除线"></a>2.3 删除线</h6><p>Alt+Shift+5或使用一对 “ ~ “符号包括文本，如：<del>kedai</del></p>
<h6 id="2-4-斜体"><a href="#2-4-斜体" class="headerlink" title="2.4 斜体"></a>2.4 斜体</h6><p>Ctrl+l、或使用一对 “ _ “符号包括文本，如：<em>kedai</em></p>
<h6 id="2-5-粗体"><a href="#2-5-粗体" class="headerlink" title="2.5 粗体"></a>2.5 粗体</h6><p>Ctrl+B、使用一对 “ ** “符号包括文本、或使用一对 “ __ “符号包括文本，如：<strong>kedai</strong></p>
<h6 id="2-6-粗体倾斜"><a href="#2-6-粗体倾斜" class="headerlink" title="2.6 粗体倾斜"></a>2.6 粗体倾斜</h6><p>使用一对三个“ * ” 符号包括文本，如：<em><strong>kedai</strong></em></p>
<h6 id="2-7-设置字体颜色及大小"><a href="#2-7-设置字体颜色及大小" class="headerlink" title="2.7 设置字体颜色及大小"></a>2.7 设置字体颜色及大小</h6><p>&lt; font size&#x3D;2 color&#x3D;”yellow” &gt;设置字体大小为2，颜色为黄色&lt; &#x2F;font  &gt; ，如：<font size=2 color="yellow">kedai</font> </p>
<h6 id="2-8-设置字体高亮"><a href="#2-8-设置字体高亮" class="headerlink" title="2.8 设置字体高亮"></a>2.8 设置字体高亮</h6><p>使用一对“ &#x3D;&#x3D; ”符号包括文本，如：&#x3D;&#x3D;kedai&#x3D;&#x3D;</p>
<h6 id="2-9-文本对齐"><a href="#2-9-文本对齐" class="headerlink" title="2.9 文本对齐"></a>2.9 文本对齐</h6><p>&lt; p align&#x3D;”lift” &gt;左对齐&lt; &#x2F;p &gt;</p>
<p align="lift">左对齐</p>

<p>&lt; p align&#x3D;”center” &gt;居中对齐&lt; &#x2F;p &gt;</p>
<p align="center" >居中对齐</p >

<p>&lt; p align&#x3D;”right” &gt;左对齐&lt; &#x2F;p &gt;</p>
<p align="right" >右对齐</p >

<h4 id="3-插入"><a href="#3-插入" class="headerlink" title="3.插入"></a><strong>3.插入</strong></h4><h6 id="3-1链接文字"><a href="#3-1链接文字" class="headerlink" title="3.1链接文字"></a>3.1链接文字</h6><p>① 当链接地址为外部地址时，格式：[ 链接文字 ] (src“描述链接”) ，其中的描述可以写也可以不写。快捷键为Ctrl+K，用Ctrl+鼠标左键点击进入链接。如：<a href="https://taobao.com/">这是一个淘宝链接</a></p>
<p>② 当链接地址为本地地址时，其中本地地址可以是相对地址和绝对地址</p>
<ul>
<li><p>绝对地址 格式：[ 绝对地址 ] (src “本地地址链接”)，用Ctrl+鼠标左键点击进入链接，上传远程后是没有效果的。</p>
</li>
<li><p>相对地址 格式：[ 相对地址\ ] ( src “&#x2F;标题.png”)，其中.&#x2F;代表.md文件所在的地址…&#x2F;表示的是.md文件的上级地址。</p>
</li>
</ul>
<h6 id="3-2图片"><a href="#3-2图片" class="headerlink" title="3.2图片"></a>3.2图片</h6><p>一共有四种方式</p>
<p>①外部链接 </p>
<p>格式：！[ alt ] (src)，快捷键：Ctrl+Shift+l</p>
<p>和链接文件、文档差不多，指示在前面加了一个！。alt：是图片的注释（可以为空），src：既可以是本地图片的绝对&#x2F;相对路径。</p>
<p>②html标签 </p>
<p>格式：&lt; img src&#x3D;”.&#x2F;图片演示.png” alt&#x3D;”替代文本” title&#x3D;”图片标题” width&#x3D;”200” height&#x3D;”200” &gt;</p>
<p>width和height设置大小，align设置位置，style中margin设置外边距、border设置边框</p>
<p>③本地文件 </p>
<p>格式：！[ alt ] (src)</p>
<p>直接拖拽、复制就行，也可以进行图片链接。拖拽和复制本质上和第一种图片链接是一样的。但是Typora默认的是绝对地址，图片没有复制到.md文件同一目录下。如果移动了.md文件或者图片位置，都会丢失图片。</p>
<p>④ TYpora支持从剪贴板中粘贴图片，但是因为 Markdown 文件是纯文本文件，所以用户无法在 Markdown 文件中直接插入图片文件，而是通过在 Markdown 文件中引用文件路径或者 URL 的方式插入图片，所以默认情况下，Typora 会先将文件保存到一个固定的目录，在 Windows 上，是保存到~\AppData\Roaming\Typora\typora-user-images\目录下。</p>
<p>所以需要修改设置（文件 &gt; 偏好设置 &gt; 图像 &gt; 对本地位置的图片应用上述规则 &gt; 下拉勾选其中一个）</p>
<p>第一个选项 [无特殊操作]，是默认选项。</p>
<p>第二个选项 [复制图片到当前文件夹（.&#x2F;）]，意思就是在插入图片时，将图片复制到正在编辑的Markdown文件所在的目录下。</p>
<p>第三个选项 [复制图片到.&#x2F;filename.assets文件夹]，意思是在插入图片时，会在当前目录下创建一个名为“{filename.asset}”的文件夹，然后把图片保存在这个文件夹下，其中${filename}&#96;指的是当前你正在编辑的Markdown文件的文件名。</p>
<p>第四个选项 [上传图片]，就是在你插入图片时，使用图片上传服务将图片上传到服务器。</p>
<p>第五个选项 [复制到指定路径]，选择该选项后，会出现一个输入框输入保存图片的路径，这里也就是使用${filrname}来指代当前编辑的Markdowan文件的文件名，也可以点击右边的文件夹按钮在弹出的对话框中选择一个路径。</p>
<p>因为如果在 Markdown 文件中使用了图片，那说明这张图片和写的东西是有关联的，那最好把图片和 Markdown 文件放在一起，这样也便于以后查找。还要注意的是，如果选择了[复制图片到当前文件夹（.&#x2F;）]，那么要把下面的[优先使用相对路径]选项勾选上，这样，Typora 在引用图片时就会使用相对路径，以后即使移动 Markdown 文件到别的目录下，只要图片随着 Markdown 文件一起移动， Typora 就永远都能找到这张图片。再配合[上传图片]，就能使 Markdown 文件的维护成本最小化。</p>
<h6 id="3-3表格"><a href="#3-3表格" class="headerlink" title="3.3表格"></a>3.3表格</h6><p>插入表格可以使用代码的方式插入，但是感觉太麻烦了。采用快捷键Ctrl+T</p>
<h4 id="4-上传图片-详细说明"><a href="#4-上传图片-详细说明" class="headerlink" title="4.[上传图片] 详细说明"></a><strong>4.[上传图片] 详细说明</strong></h4><p>如果src是 URL 的话，你在分享的时候只要分享一个 Markdown 文件就可以了，只要能联网，Markdown 的渲染引擎就能根据 URL 找到你引用的图片。</p>
<p>要想把本地的图片路径转换成 URL，就得把图片上传到网络上某个位置，然后拿到这个图片的 URL。使用[Typora + 第三方图片上传服务]就可以自动完成这一操作。</p>
<p><strong>⚠警告：</strong></p>
<p><u><em>Typora是通过调用第三方的软件实现图片上传的，它本身并不会上传图片，提供存储图片服务的也是第三方的云存储服务，它们并不属于Typora。所以在使用上传图片功能的时候，要注意这些第三方服务的许可证书、用户协议、服务稳定性以及可靠性。</em></u></p>
<p><u><em>在偏好设置中开启上传图片的功能后，Typora 会将要上传的图片发送给第三方图片上传软件，然后他们会把你的图片上传到第三方（甚至是第四方）图床，Typora 不会控制这个过程，也无法保证这个过程的顺利，所以一定要选择一个可靠的服务来保证数据的安全。</em></u></p>
<p><u><em>除了隐私和可靠性问题，你还需注意，有些服务在保存图片时可能会设置过期时间；有些服务没有提供 [删除] 的功能，即使你不小心上传了敏感图片；有些服务遵守的不是你所在国家的法律，可能会封禁一些特定国家的特定类型的图片或者用户等等。</em></u></p>
<p><u><em>总而言之，在选择某个图片上传应用及服务之前，一定要仔细阅读他们的用户手册。</em></u></p>
<p>配置：</p>
<p>在偏好设置面板中可以开启并配置图片上传服务，Typora支持以下图片上传服务：</p>
<ul>
<li>PicGo.app (macOS &#x2F; Windows &#x2F; Linux, 只有简体中文版)</li>
<li>PicGo (命令行应用) (Windows &#x2F; Linux)</li>
<li>自定义 (macOS &#x2F; Windows &#x2F; Linux)</li>
</ul>
<p>在选择了其中一个上传服务后，你需要下载并安装相应的应用，做一些简单的配置，比如你想使用那个云存储服务来保存上传的图片，然后点击 [验证图片上传选项]，验证Typora使用当前服务和配置是否能上传本地图片。</p>
<p>点击 [验证图片上传选项] 按钮后，Typora会尝试使用当前服务和配置上传图片，如果出现 [验证成功] 的对话框，说明图片上传服务可以用了。如果显示的时 [验证失败] 的对话框，有可能时你电脑上还没有安装相应的服务或者网络问题，可以根据对话框中的提示进行检查。</p>
<p><strong><u>Typora + PicGo + Gitee&#x2F;GitHub 搭建个人图床，实现图片上传。</u></strong></p>
<p>Typora 的作用</p>
<p>具有对图片路径进行管理和转换的功能。当用户在 Typora 中插入图片时，它可以将图片的本地路径转换为符合 Markdown 语法的链接形式。而且 Typora 可以与 PicGo 进行集成，将图片上传的操作集成到其操作流程中，使得用户在撰写文档插入图片时，能够直接调用 PicGo 进行图片上传，而无需额外切换到其他工具进行上传操作。</p>
<p>PicGo 的作用</p>
<p>PicGo 是一个专门用于图片上传的工具，它支持多种图床平台，其核心原理是通过调用不同图床平台的 API，将本地图片数据以二进制流等形式发送到对应的图床服务器上。_在与 Typora 和 Gitee&#x2F;GitHub 配合时，PicGo 充当了桥梁的角色。_当在 Typora 中触发图片上传操作时，PicGo 会获取到图片的本地路径和相关信息，然后根据用户在 PicGo 中配置的 Gitee 或 GitHub 图床参数，将图片数据按照相应平台的要求进行格式化和封装，再通过 HTTP 请求等方式将图片上传到 Gitee 或 GitHub 的仓库中。上传成功后，PicGo 会获取到图片在 Gitee 或 GitHub 上的访问链接，并将这个链接返回给 Typora，以便 Typora 将其插入到 Markdown 文档中，实现图片的引用。</p>
<p>Gitee&#x2F;GitHub 的作用</p>
<p>GitHub 本质上是代码托管平台，但它们也可以用于存储图片等静态资源。它们提供了版本控制、仓库管理等功能，用户可以在上面创建仓库来存储各种文件。当 PicGo 将图片上传到  GitHub 仓库时，实际上是利用了这些平台的文件存储功能。这些平台会为每个上传的文件分配一个唯一的存储位置，并生成一个对应的访问链接。这个链接遵循平台的特定规则，通过这个链接，用户可以在互联网上访问到存储在  GitHub 仓库中的图片资源。同时， GitHub 都有一定的免费存储空间和流量额度，这使得用户可以在一定范围内免费使用它们来搭建个人图床，存储和分享自己的图片。</p>
<p><strong>步骤：</strong></p>
<h5 id="配置GitHub"><a href="#配置GitHub" class="headerlink" title="配置GitHub"></a><strong>配置GitHub</strong></h5><p>创建一个新的仓库用来保存图片。</p>
<p>选择<u>Add a README file</u>。注意确保选择”<u>Public</u>“，否则之后再外部访问图床中的图片，会由于没有权限导致访问失败。</p>
<p>在个人设置中，选择“<u>Developer settings</u>”。</p>
<p>随后，选择“<u>Personal access tokens</u>”，并选择其中下方的“<u>Tokens (classic)</u>”；随后，选择右上角“<u>Generate new token</u>”，并再选择“<u>Generate new token (classic)</u>”。</p>
<p>随后，在弹出的配置界面中，首先填写“<u>Note</u>”，这个是当前token的注释，也用一个和图片有关的名称来填写即可；随后，配置token的有效期。其实我们可以将有效期选择为永久，但是<u>GitHub</u>官方强烈不推荐这种<u>永久</u>期限的token，因此可以选择 <u>90</u>天，之后过期了我们继续来设置新的有效期就好。随后，配置勾选项，我这里是将全部的勾选项都选中了，但是其实只要保证 <u>repo</u> 开头的勾选项选中即可。</p>
<p>接下来，即可看到此时token的序号已经获取了，如下图所示。这里大家一定需要<u>保存一下当前的序号</u>，之后就看不到这个序号了。</p>
<p>至此，我们就完成了GitHub上的配置操作。</p>
<h5 id="配置PicGo"><a href="#配置PicGo" class="headerlink" title="配置PicGo"></a><strong>配置PicGo</strong></h5><p>将图片上传到GitHub中。下载地址：<a href="https://picgo.github.io/PicGo-Doc/">PicGo</a></p>
<p>随后，<u>安装PicGo</u>并打开，如下图所示。其中，我们需要在“<u>图床设置</u>”中找到“<u>GitHub</u>”，并配置各项信息。其中，<u>仓库名</u>就是我们前面创建的<u>Repository的名称</u>；Token就是前面我们获取的token序号；存储路径这里我们可以空着，如果大家需要指定将图片存储到仓库中的某个路径下，就在这里设置即可；分支名由于github网站的调整，仓库的默认分支名称需要修改为<u>main</u>。随后的自定义域名，可以填写<a href="https://cdn.jsdelivr.net/gh/%E2%80%9C%E7%94%A8%E6%88%B7%E5%90%8D%E2%80%9D/%E2%80%9C%E4%BB%93%E5%BA%93%E5%90%8D%E2%80%9D@master%E3%80%82">https://cdn.jsdelivr.net/gh/“用户名”/“仓库名”@master。</a></p>
<h5 id="配置Typora"><a href="#配置Typora" class="headerlink" title="配置Typora"></a><strong>配置Typora</strong></h5><p>在“<u>文件</u>”中选择“<u>偏好设置…</u>”，随后选择“<u>图像</u>”，下拉选择“<u>上传图片</u>”，勾选“<u>对本地位置的图片应用上述规则</u>”、“<u>插入是自动转义图片URL</u>”。</p>
<p>随后，选择“<u>验证图片上传选项</u>”，如果出现验证成功窗口，则表明成功配置完毕。</p>
<h5 id="上传方式"><a href="#上传方式" class="headerlink" title="上传方式"></a><strong>上传方式</strong></h5><p><strong>全局设置</strong></p>
<p>在偏好设置面板中，[插入图片时…] 下方的下拉框中，选择 [上传图片] 选项，Typora就会在你插入图片时自动上传。如果只想上传本地图片，那么就只勾选 [对本地位置的图片应用上述规则] ，如果插入的图片本来就位于网络上，但是你想再上传一遍图床，那就把 [对网络位置的图片应用上述规则] 也勾选上。</p>
<p><strong>针对每一个文件单独设置</strong></p>
<p>手下需要勾选上偏好设置面板中的 [允许根据YAML设置自动上传图片] ，然后，如果你的Markdown文件再TYAML中包含如下配置：</p>
<p><code>typora-copy-image-to: upload</code></p>
<p>当插入图片时，Typora会使用这个选项自动上传图片。</p>
<p>或者可以在菜单栏中点击 格式 &gt; 图像 &gt; 当插入本地图片时…  插入YAML配置，开启这个功能。</p>
<p><strong>上传指定的图片</strong></p>
<p>可以在Typora中，右击点击要上传的图片，选择 [上传图片] 。</p>
<p><strong>上传所有本地图片</strong></p>
<p>如果文件中含有大量的本地图片，想要一次性都上传，可以点击菜单栏中的 格式 &gt; 图像 &gt; 上传所有本地图片 。</p>
<h4 id="5-快捷键"><a href="#5-快捷键" class="headerlink" title="5.快捷键"></a><strong>5.快捷键</strong></h4><table>
<thead>
<tr>
<th>功能</th>
<th>快捷键</th>
</tr>
</thead>
<tbody><tr>
<td>新建一个新的窗口</td>
<td>Ctrl+N</td>
</tr>
<tr>
<td>创建一个新的窗口</td>
<td>Ctrl+Shift+N</td>
</tr>
<tr>
<td>打开资源管理器（初始在.md文件）</td>
<td>Ctrl+O</td>
</tr>
<tr>
<td>快速打开近期使用过的Markdown文件搜索框</td>
<td>Ctrl+P</td>
</tr>
<tr>
<td>保存</td>
<td>Ctrl+S</td>
</tr>
<tr>
<td>保存为（另存为）</td>
<td>Ctrl+Shift+S</td>
</tr>
<tr>
<td>打开偏好设置界面</td>
<td>Ctrl+,</td>
</tr>
<tr>
<td>关闭当前窗口</td>
<td>Ctrl+W</td>
</tr>
<tr>
<td>开始一个新段落</td>
<td>Enter</td>
</tr>
<tr>
<td>开始一个新行</td>
<td>Shift+Enter</td>
</tr>
<tr>
<td>复制选中的文本为Markdown语言</td>
<td>Ctrl+Shift+C</td>
</tr>
<tr>
<td>将复制的内容以纯文本的格式粘贴</td>
<td>Ctrl+Shift+V</td>
</tr>
<tr>
<td>在段落内选中一句\在表内选中一行</td>
<td>Ctrl+L</td>
</tr>
<tr>
<td>删除表中的一行</td>
<td>Ctrl+Shift+Backspace</td>
</tr>
<tr>
<td>选中一个段元格</td>
<td>Ctrl+E</td>
</tr>
<tr>
<td>选择一个单元格</td>
<td>Ctrl+D</td>
</tr>
<tr>
<td>跳转到文章最顶部</td>
<td>Ctrl+Home</td>
</tr>
<tr>
<td>跳转到文章底部</td>
<td>Ctrl+End</td>
</tr>
<tr>
<td>跳转到光标所在位置</td>
<td>Ctrl+J</td>
</tr>
<tr>
<td>删除一个单词</td>
<td>Ctrl+Shift+D</td>
</tr>
<tr>
<td>查找</td>
<td>Ctrl+F</td>
</tr>
<tr>
<td>查找已经查找的的上一个单词</td>
<td>Shift+F3\Shift+Enter</td>
</tr>
<tr>
<td>查找当前查找的的下一个单词</td>
<td>F3\Enter</td>
</tr>
<tr>
<td>替换</td>
<td>Ctrl+H</td>
</tr>
<tr>
<td>设置文本为标题1-6</td>
<td>Ctrl+ 1&#x2F;2&#x2F;3&#x2F;4&#x2F;5&#x2F;6</td>
</tr>
<tr>
<td>设置文本为段落</td>
<td>Ctrl+0</td>
</tr>
<tr>
<td>给标题升1级</td>
<td>Ctrl+&#x3D;</td>
</tr>
<tr>
<td>给标题降1级</td>
<td>Ctrl±</td>
</tr>
<tr>
<td>插入表</td>
<td>Ctrl+T</td>
</tr>
<tr>
<td>插入代码块</td>
<td>Ctrl+Shift+k</td>
</tr>
<tr>
<td>插入数学符号的文本</td>
<td>Ctrl+Shift+M</td>
</tr>
<tr>
<td>插入引用代码</td>
<td>Ctrl+Shift+Q</td>
</tr>
<tr>
<td>插入有序列表</td>
<td>Ctrl+Shift+[</td>
</tr>
<tr>
<td>插入无序列表</td>
<td>Ctrl+Shift+]</td>
</tr>
<tr>
<td>缩进</td>
<td>Tab \ Ctrl+[</td>
</tr>
<tr>
<td>取消缩进</td>
<td>Shift+Tab \ Ctrl+]</td>
</tr>
<tr>
<td>加粗字体</td>
<td>Ctrl+B</td>
</tr>
<tr>
<td>文本删除线</td>
<td>Alt+Shift+5</td>
</tr>
<tr>
<td>斜体</td>
<td>Ctrl+I</td>
</tr>
<tr>
<td>标记为代码</td>
<td>Ctrl+Shift+5</td>
</tr>
<tr>
<td>插入超链接</td>
<td>Ctrl+K</td>
</tr>
<tr>
<td>插入图片链接</td>
<td>Ctrl+Shift+I</td>
</tr>
<tr>
<td>消除文本格式</td>
<td>Ctrl+\</td>
</tr>
<tr>
<td>切换侧边栏</td>
<td>Ctrl+Shift+L</td>
</tr>
<tr>
<td>切换成出大纲</td>
<td>Ctrl+Shift+1</td>
</tr>
<tr>
<td>切换到文件栏</td>
<td>Ctrl+Shift+2</td>
</tr>
<tr>
<td>展示文件目录</td>
<td>Ctrl+Shift+3</td>
</tr>
<tr>
<td>切换成源码格式（Markdown）</td>
<td>Ctrl+&#x2F;</td>
</tr>
<tr>
<td>专注模式</td>
<td>F8</td>
</tr>
<tr>
<td>打字机模式</td>
<td>F9</td>
</tr>
<tr>
<td>全屏模式</td>
<td>F11</td>
</tr>
<tr>
<td>扩大</td>
<td>Ctrl+Shift+&#x3D;</td>
</tr>
<tr>
<td>缩小</td>
<td>Ctrl+Shift±</td>
</tr>
<tr>
<td>重置大小（好像windows有快捷键冲突）</td>
<td>Ctrl+Shift+0</td>
</tr>
<tr>
<td>在两个打开的文件进行切换</td>
<td>Ctrl+Tab</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo+github 部署博客</title>
    <url>/2025/01/23/hexo-github-%E9%83%A8%E7%BD%B2%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[]]></content>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>1月22日</title>
    <url>/2025/01/22/1%E6%9C%8822%E6%97%A5/</url>
    <content><![CDATA[<p>创建页面（导航栏列表项）<br>列表项名：分类<br>hexo new page categories<br>然后将以下代码粘贴到文件中：<br>&#x2F;source&#x2F;categories&#x2F;index.md<br>    —<br>    title: categories<br>    type: categories<br>    layout: “categories”<br>    —</p>
]]></content>
      <categories>
        <category>页面部署</category>
      </categories>
      <tags>
        <tag>进程</tag>
      </tags>
  </entry>
</search>
